{"version":3,"sources":["src/app.ts","src/auth-config.ts","src/environment.ts","src/main.ts","src/no-selection.ts","src/resources/index.ts","src/recipe-detail.ts","src/signup.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {autoinject} from 'aurelia-framework';\nimport {Router, RouterConfiguration} from 'aurelia-router';\nimport {FetchConfig} from 'aurelia-auth'\nimport {AuthService} from 'aurelia-auth';\n\n@autoinject\nexport class App {\n  router: Router;\n  configureRouter(config: RouterConfiguration, router: Router){\n    config.title = \"Menu Creator\"\n    config.map([\n      { route: '', moduleId: 'no-selection', title: 'Welcome', nav: true},\n      { route: 'recipes/:id', moduleId: 'recipe-detail', name: \"recipes\", auth: true, nav: false},\n      { route: 'signup', name: 'signup', moduleId: './signup', nav: false, title:'Signup', authRoute: true },\n      { route: 'login', name: 'login', moduleId: './login', nav: false, title:'Login', authRoute: true },\n      { route: 'logout', name: 'logout', moduleId: './logout', nav: false, title:'Logout', authRoute: true }\n    ]);\n    this.router = router;\n  }\n\n  _isAuthenticated = false;\n  auth: AuthService;\n  constructor(auth: AuthService) {\n    this.auth = auth;\n  }\n  get isAuthenticated() {\n    return this.auth.isAuthenticated();\n  };\n}\n","// Specific settings for our application's\n// authentication context. These will override\n// the default settings provided by aureliauth\n\nvar config = {\n\n  // Our Node API is being served from localhost:3001\n  baseUrl: 'http://localhost:8080',\n  // The API specifies that new users register at the POST /users enpoint.\n  signupUrl: 'addUser',\n  // Logins happen at the POST /sessions/create endpoint.\n  loginUrl: 'auth/login',\n  // The API serves its tokens with a key of id_token which differs from\n  // aureliauth's standard.\n  tokenName: 'token'\n\n}\n\nexport default config;\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\nimport config from './auth-config';\nimport {HttpClient} from 'aurelia-fetch-client';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources')\n    .plugin('aurelia-auth', (baseConfig) => {\n      baseConfig.configure(config);\n    });\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class NoSelection {\n  message = \"Please Select a Recipe.\";\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","export class NoSelection {\n  message = \"Please Select a Recipe.\";\n}\n","import {autoinject} from 'aurelia-framework';\nimport {AuthService} from 'aurelia-auth';\n\n@autoinject\nexport class App {\n  heading = 'Sign Up';\n  email = '';\n  password = '';\n  signupError = 'asd';\n\n  auth: AuthService;\n  constructor(auth: AuthService) {\n    this.auth = auth;\n  }\n\n  signup() {\n    return this.auth.signup(\"blah\", this.email, this.password)\n    .then((response) => {\n      console.log(\"Singed Up\", response);\n    })\n    .catch(error => {\n      console.log(\"I AM IN THE ERROR error\", error)\n      error.text().then((text) =>{\n          console.log(error)\n          this.signupError = text;\n        });\n    })\n  }\n}\n"],"sourceRoot":".."}